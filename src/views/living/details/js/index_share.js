;
import Tim from "tim-js-sdk";
import COS from "cos-js-sdk-v5";
import { setsessionStorage, getsessionStorage } from "@/utils/index.js";
import Player from "xgplayer";
import FlvPlayer from "xgplayer-flv";
import { checkdevice } from "@/utils/checkdevice.js";
export default { name: "livingdetailsshare", components: {}, data() { return { livinglidata: "", goodschoosestatus: false, player: "", canplaythroughstatus: false, reloadtimes: 0, timgroupstatus: true, livingendstatus: true, confirmordermbstatus: false, confirmorderdata: "", goodsList: [], controlstatus: false, controlstatus_1: true, controlstatus_2: false, talkinguid: "", hlrtipsstatus: false, selfsf: 0, targetsf: 0, options: { SDKAppID: 1400068060 }, timresdata: "", timtxt: "", imiptshowstatus: false, currentpersonid: "", conversationID: "", messageInfo: "收到的消息", messageList: [], nextReqMessageID: "", conversationList: [], isActive: 0, userName: "用户名", receivemsgdata: "", IMtanchuangTimer: "", IMtanchuang_currentdata: "", wxtipsstatus: false, openapptips: false, openappbtns: false, lunchupappurl: '', guilddownloadtype_show: true, appletcode_show: false, zhibojianaddcode: false, zhibojianaddcode_bg_cover: '' } }, computed: { wdwidth() { return document.documentElement.clientWidth }, wdheight() { return document.documentElement.clientHeight }, hasStartstatus: function() { return this.player.hasStart }, currentTime: function() { return this.player.currentTime }, currentgood: function() { let that = this; let currentgoodnew = ""; if (that.goodsList == null || that.goodsList == "" || that.goodsList == undefined) { currentgoodnew = "" } else { for (let i = 0; i < that.goodsList.length; i++) { if (that.goodsList[i].is_saling == 1) { currentgoodnew = that.goodsList[i] } } } return currentgoodnew }, tim() { return Tim.create(this.options) } }, watch: { hasStartstatus(newval, oldval) { if (newval == true) { this.showtimtalk() } } }, mounted() { let that = this;
        this.livinglidata = JSON.parse(this.$route.query.data); if (checkdevice() == "anzhuo") { that.downloadappurl = 'https://apk.izhuazhou.cn/zsapk/zz_zs.apk' } else { that.downloadappurl = 'https://apps.apple.com/cn/app/id1487579824'; if (checkdevice() == "weixinios") { that.wxtipsstatus = true } }
        this.lunchupappurlfn();
        this.livingtypecheck() }, methods: { lunchupappurlfn() { let that = this;
            this.lunchupappurl = `zhuazhouH5://live?uid=${that.livinglidata.uid}&liveId=${that.livinglidata.liveId}&anchorId=${that.livinglidata.anchorId}` }, livingtypecheck() { let that = this;
            this.api.living.getLiveInfo({ liveId: that.livinglidata.liveId, operterId: '', userId: '' }).then(res => { if (res.data.code == 1) { let resdata = res.data.data;
                    that.selfsf = resdata.identity;
                    that.targetsf = resdata.otherIdentity; if (resdata.password) { that.zhibojianaddcode = true;
                        that.zhibojianaddcode_bg_cover = resdata.cover; return } else { that.zhibojianaddcode_bg_cover = resdata.cover;
                        that.init(); return } } }) }, init() { let that = this; if (checkdevice() == "weixin" || checkdevice() == "anzhuo" || checkdevice() == "ios") { that.player = new Player({ id: "videodom", url: that.livinglidata.url + ".m3u8", playsinline: true, "x5-video-player-type": "h5", "x5-video-orientation": "portraint", "x5-video-player-fullscreen": true, width: that.wdwidth, height: that.wdheight, poster: require('@/views/living/details/img/livingdtbg.jpg'), ignores: ["fullscreen", "volume", "play"], closeVideoClick: true, closeVideoDblclick: true, closeVideoTouch: true, autoplay: true, preloadTime: 5, isLive: true, cors: true }) } else if (checkdevice() == "pc") { that.player = new FlvPlayer({ id: "videodom", url: that.livinglidata.url + ".flv", "x5-video-player-type": "h5", "x5-video-player-fullscreen": true, width: that.wdwidth, height: that.wdheight, poster: require('@/views/living/details/img/livingdtbg.jpg'), ignores: ["fullscreen", "volume", "play"], closeVideoClick: true, closeVideoDblclick: true, closeVideoTouch: true, autoplay: true, isLive: true, cors: true }) }
            that.player.on("ended", function() { console.log("视频 ended");
                that.canplaythroughstatus = false;
                that.livingendstatus = false });
            that.player.on("error", function() { console.log("视频 error");
                that.canplaythroughstatus = false; if (that.reloadtimes <= 35) { setTimeout(() => { that.reloadtimes = that.reloadtimes + 1;
                        that.player.reload() }, 2000) } else { that.player.destroy(true);
                    window.location.reload() } });
            that.player.on("seeking", function() {});
            that.player.on("seeked", function() {});
            that.player.on("waiting", function() { console.log("等待加载数据");
                that.canplaythroughstatus = false });
            that.player.on("canplay", function() { console.log("视频可以播放");
                that.$toast.clear();
                that.canplaythroughstatus = true });
            that.player.on("canplaythrough", function() { console.log("视频可以流畅播放");
                that.$toast.clear();
                that.canplaythroughstatus = true });
            this.getgoodsList() }, open_openappbtnsbox_zbjm() { var that = this; if (checkdevice() == "weixinios" || checkdevice() == "weixin") { that.wxtipsstatus = true;
                that.openappbtns = false;
                that.zhibojianaddcode = false; return } else { that.openappbtns = true;
                that.zhibojianaddcode = false; return } }, openappfn() { let that = this; let hj = checkdevice();
            console.log(hj); if (hj == "weixin") { that.wxtipsstatus = true } else { that.openappbtns = true } }, downloadapp() { let that = this; let hj = checkdevice();
            console.log(hj); if (hj == "weixin") { that.wxtipsstatus = true } else if (hj == "anzhuo") { that.wxtipsstatus = false;
                that.$toast.clear();
                window.open("https://apk.izhuazhou.cn/zsapk/zz_zs.apk") } else if (hj == "ios") { that.wxtipsstatus = false;
                that.$toast.clear();
                window.open("https://apps.apple.com/cn/app/id1487579824") } else if (hj == "pc") { that.$toast("请在手机浏览器打开此页面") } }, lunchupapp() { let that = this; let hj = checkdevice();
            console.log(hj); if (hj == "weixin") { that.wxtipsstatus = true } else if (hj == "anzhuo") { that.$toast.loading("正在拉起本地APP...");
                that.openapptips = true;
                window.open(`zhuazhouH5: //live?uid=${that.livinglidata.uid}&liveId=${that.livinglidata.liveId}&anchorId=${that.livinglidata.anchorId}`) } else if (hj == "ios") { that.$toast.loading("正在拉起本地APP...");
                that.openapptips = true;
                window.open(`zhuazhouH5: //live?uid=${that.livinglidata.uid}&liveId=${that.livinglidata.liveId}&anchorId=${that.livinglidata.anchorId}`) } else if (hj == "pc") { that.$toast("请在手机浏览器打开此页面") } }, returnfn() { return false }, gotodetails(skuid) { this.openappfn() }, videopaly() { let that = this; if (that.canplaythroughstatus) { setTimeout(() => { that.player.start();
                    that.player.play() }, 0) } }, videoplay() { if (this.hasStartstatus) {} else { this.videopaly() } }, showtimtalk() { this.timgroupstatus = true }, follow(currentstatus) { this.openappfn() }, getgoodsList() { let that = this;
            this.api.living.goodsList({ operatorId: that.livinglidata.anchorId, liveId: that.livinglidata.liveId }).then(res => { if (res.data.code == 1) { if (res.data.data.list != null || res.data.data.list != undefined || res.data.data.list != "") { that.goodsList = res.data.data.list } else { that.goodsList = [] } } }) }, goodadd(sku_id, shopid) { this.openappfn() }, confirmorderclick(confirmorderdata) { let that = this; let confirmorderdatanew = confirmorderdata; let orderListdatanew = { productPic: confirmorderdatanew.imageUrl, productName: confirmorderdatanew.goodsTitle, payAmount: confirmorderdatanew.currPrice, totalAmount: confirmorderdatanew.currPrice, totalQuantity: 1, productPrice: confirmorderdatanew.currPrice, productQuantity: 1, shopId: confirmorderdatanew.shopId, shopName: confirmorderdatanew.specsInfo, shopIcon: confirmorderdatanew.shopLogo, receiverId: "", productAttr: confirmorderdatanew.specInfo, productSkuId: confirmorderdatanew.skuId, productWeight: confirmorderdatanew.weight, goldenPrice: "", manualFee: confirmorderdatanew.manualFee, serviceFee: confirmorderdatanew.serviceFee, designFee: confirmorderdatanew.designFee ? confirmorderdatanew.designFee : 0, insured_price: confirmorderdatanew.insuredPrice, liveId: that.livinglidata.liveId };
            setsessionStorage("pagefrom", "livingdetails");
            setsessionStorage("orderListdata", orderListdatanew);
            this.$router.push({ name: "confirmorder" }) }, iflogin() { let that = this; if (!that.$store.state.user.userid || that.$store.state.user.userid == 0) { that.$toast({ message: "暂未登录，请先登录", duration: 810, forbidClick: true });
                setTimeout(() => { that.gotologin() }, 810); return false } else { return true } }, postmsg() { let that = this; if (that.timtxt == "") { that.$toast("输入框内容为空,请编辑好再发送！") } else { that.txtpost() } }, shutUp_Kickout(talkinguid) { if (talkinguid == 'noid') { return } let that = this;
            this.api.living.getLiveInfo({ liveId: that.livinglidata.id, operterId: that.$store.state.user.userid, userId: talkinguid, }).then(res => { if (res.data.code == 1) { let resdata = res.data.data;
                    that.selfsf = resdata.identity;
                    that.targetsf = resdata.otherIdentity; if (that.targetsf == 0 && that.selfsf == 2 || that.targetsf == 0 && that.selfsf == 1) { that.controlstatus = true;
                        that.controlstatus_1 = true;
                        that.talkinguid = talkinguid } } }) }, jinyan(type) {}, tichuzbj() {}, joinOrLeaveRoom(inorout) {}, loginfn() { let that = this; if (!that.iflogin()) { return } let promiselogin = this.tim.login({ userID: that.$store.state.user.userid, userSig: that.$store.state.user.sig });
            promiselogin.then(function(imResponse) { that.timresdata = imResponse.data;
                that.joinGroup();
                that.receiveMsg();
                that.timgroupstatus = true }).catch(function(imError) { console.warn("login error:", imError) }) }, logoutfn() { let that = this;
            that.tim.logout();
            this.timresdata = "" }, onKickedOut(event) { console.log(event.data.type) }, txtpost() { alert("IM发送消息"); let that = this; if (that.timtxt == "") { return } let timestamp = parseInt(new Date().getTime() / 1000); let message = that.tim.createCustomMessage({ to: that.livinglidata.gid, conversationType: Tim.TYPES.CONV_GROUP, type: Tim.TYPES.MSG_CUSTOM, payload: { data: JSON.stringify({ conversationId: that.livinglidata.gid, chatType: "group", msgType: "text", sendUserInfo: { id: that.$store.state.user.userid, name: that.$store.state.user.userdata.userInfo.nickname, isVip: that.$store.state.user.userdata.userInfo.is_vip }, msgContent: { text: that.timtxt, subText: "", url: "", skuId: 0, skuIDString: "", shopId: "", receiveId: "" }, timestamp: timestamp }), description: "", extension: "" } }); let promise = that.tim.sendMessage(message);
            that.$toast.loading("发送中...");
            promise.then(function(imResponse) { let msgtxt = that.timtxt; let name = that.$store.state.user.userdata.userInfo.nickname; let isvip = that.$store.state.user.userdata.userInfo.is_vip; let talkinguid = "noid";
                that.messageList.push({ isvip, name, msgtxt, talkinguid });
                setTimeout(() => { that.imscrollbottom() }, 0);
                that.$toast.clear();
                that.timtxt = "";
                that.imiptshowstatus = false }).catch(function(imError) { console.warn("sendMessage error:", imError);
                that.$toast("发送失败，请重试"); if (imError == "Error: 操作权限不足，例如 Public 群组中普通成员尝试执行踢人操作，但只有 App 管理员才有权限。") { that.tim.logout();
                    that.loginfn() }
                that.imiptshowstatus = false }) }, timimgchange() { alert("发送图片"); let that = this; let message = that.tim.createImageMessage({ to: that.livinglidata.gid, conversationType: Tim.TYPES.CONV_GROUP, payload: { file: document.getElementById("imagePicker") }, onProgress: function(event) { console.log("file uploading:", event) } }); let promise = that.tim.sendMessage(message);
            promise.then(function(imResponse) { console.log(imResponse) }).catch(function(imError) { console.warn("sendMessage error:", imError) }) }, receiveMsg() { alert("接收消息"); let that = this; let onMessageReceived = function(event) { let msgdata = JSON.parse(event.data[0].payload.data); let msgcontent = msgdata.msgContent; if (msgdata.timestamp == that.IMtanchuang_currentdata.timestamp) { return }
                that.IMtanchuang_currentdata = msgdata; if (msgdata.conversationId == that.livinglidata.gid) { that.receivemsgdata = msgdata; let talkinguid = "noid";
                    console.log(msgdata); if (msgdata.msgType == "text") { let msgtxt = msgdata.msgContent.text; let name = msgdata.sendUserInfo.name; let isvip = msgdata.sendUserInfo.isVip;
                        talkinguid = msgdata.sendUserInfo.id;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "hello") { let comename = msgdata.sendUserInfo.name; let msgtxt = `欢迎用户${comename}进入直播间`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "endLive") { that.livingendstatus = false;
                        that.quitGroup();
                        that.logoutfn();
                        that.player.destroy(true) } else if (msgdata.msgType == "switchGoods") { that.getgoodsList() } else if (msgdata.msgType == "kickout") { let msgtxt = "你被踢出了直播间！"; if (that.receivemsgdata.msgContent.text == that.$store.state.user.userid) { let name = "系统公告"; let isvip = -1;
                            that.messageList.push({ isvip: isvip, name, msgtxt, talkinguid });
                            that.$router.go(-1) } } else if (msgdata.msgType == "like") { let msgtxt = `点赞消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "announcement") { let msgtxt = `公告消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "shopCat") { let msgtxt = `用户把商品加入购物车消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "system_buySuccess") { let msgtxt = `用户成功购买商品消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "system_seeGoods") { let msgtxt = `用户查看了商品详情消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "system_userFollow") { let msgtxt = `用户关注了主播消息`; let name = "系统公告"; let isvip = 0;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } else if (msgdata.msgType == "system_sendPayOrder") { if (msgcontent.receiveId == that.$store.state.user.userid) { return } else { let msgtxt = that.receivemsgdata.msgContent.text; let name = "系统公告sendPayOrder"; let isvip = msgdata.sendUserInfo.isVip;
                            that.messageList.push({ isvip, name, msgtxt, talkinguid }) } } else if (msgdata.msgType == "system_sendPayUrl") { let skuIDString = that.receivemsgdata.msgContent.skuIDString; if (msgcontent.receiveId == that.$store.state.user.userid) { that.confirmordermbstatus = true;
                            console.log(that.receivemsgdata.msgContent.skuIDString);
                            that.api.living.getGoodsSkuTemplateById({ skuId: that.receivemsgdata.msgContent.skuIDString }).then(res => { console.log(res); if (res.data.code == 1) { that.confirmorderdata = res.data.data } else { that.$toast(res.data.info) } }).catch(err => { that.$toast("请求错误。请重试") }) } else { let msgtxt = that.receivemsgdata.msgContent.text; let name = "系统公告sendPayUrl"; let isvip = msgdata.sendUserInfo.isVip;
                            that.messageList.push({ isvip, name, msgtxt, skuIDString, talkinguid }) } } else if (msgdata.msgType == "system_buyGoods") { let msgtxt = `用户请求购买消息`; let name = "系统公告"; let isvip = msgdata.sendUserInfo.isVip;
                        that.messageList.push({ isvip, name, msgtxt, talkinguid }) } }
                setTimeout(() => { that.imscrollbottom() }, 0) };
            that.tim.on(Tim.EVENT.MESSAGE_RECEIVED, onMessageReceived) }, imscrollbottom() { let that = this; if (that.$refs.msgboxscroll.offsetHeight < that.$refs.msgboxwrap.offsetHeight) { that.$refs.msgboxscroll.scrollTop = that.$refs.msgboxwrap.offsetHeight - that.$refs.msgboxscroll.offsetHeight } }, joinGroup() { alert("加入群聊"); let that = this; let promise = that.tim.joinGroup({ groupID: that.livinglidata.gid, type: Tim.TYPES.GRP_AVCHATROOM });
            promise.then(function(imResponse) { that.receiveMsg() }).catch(function(imError) { if (imError == "Error: 群组不存在，或者曾经存在过，但是目前已经被解散。") { that.$toast.clear();
                    that.livingendstatus = false;
                    that.quitGroup();
                    that.logoutfn();
                    that.player.destroy(true) } }) }, quitGroup() { alert("退出群组群聊"); let that = this; let promise = that.tim.quitGroup(that.livinglidata.gid.toString());
            promise.then(function(imResponse) { console.log("退出群聊" + imResponse.data.groupID + "成功") }).catch(function(imError) { console.warn("退出群聊 error:", imError) }) }, openappletcode() { this.guilddownloadtype_show = false;
            this.appletcode_show = true }, close_openappbtnsbox() { this.wxtipsstatus = false;
            this.guilddownloadtype_show = true;
            this.appletcode_show = false } }, beforeCreate() {}, beforeMount() {}, beforeUpdate() {}, updated() {}, beforeDestroy() { this.player.destroy(true) }, destroyed() {} };;